@Ecore(nsURI="http://www.emfjson.org/jackson/annotations")
@GenModel(
    modelDirectory="emfjson-jackson/src/test/java-gen",
    updateClasspath="false",
    bundleManifest="false",
    rootExtendsClass="org.eclipse.emf.ecore.impl.MinimalEObjectImpl",
    complianceLevel="7.0"
)
package org.emfjson.jackson.junit.annotations

annotation "JsonIgnore" as JsonIgnore
annotation "JsonProperty" as JsonProperty
annotation "JsonIgnoreProperties" as JsonIgnoreProperties

class TestA {
<<<<<<< be6132e515af102fd28446e2fae0ab6c26b36b1d

	@JsonProperty(value = "my_value")
	String value

}

class TestB {

=======
	@JsonProperty(value = "my_value")
	String value

>>>>>>> Splitting deserialization to use default jackson deseerializers when possible and specific emf deserializers when necessary.
	@JsonProperty
	op String hello() {
		"Hello"
	}
<<<<<<< be6132e515af102fd28446e2fae0ab6c26b36b1d

}
=======
}

class TestB {}
>>>>>>> Splitting deserialization to use default jackson deseerializers when possible and specific emf deserializers when necessary.
